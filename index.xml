<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>nrxr@journal:~$</title><link>https://nrxr.org/</link><description>Recent content on nrxr@journal:~$</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 08 Oct 2020 20:37:00 +0000</lastBuildDate><atom:link href="https://nrxr.org/index.xml" rel="self" type="application/rss+xml"/><item><title>US collecting global data is an issue, China doing it with UN's permission is bigger</title><link>https://nrxr.org/post/us-collecting-global-data-is-an-issue-china-doing-it-with-un-s-permission-is-bigger/</link><pubDate>Thu, 08 Oct 2020 20:37:00 +0000</pubDate><guid>https://nrxr.org/post/us-collecting-global-data-is-an-issue-china-doing-it-with-un-s-permission-is-bigger/</guid><description>The UN has given license and is encouraging China to use its surveillance system and collect data globally. The US doing surveillance and collecting data globally was an issue already, now China doing it is way worst.
China is a dictatorship and even when the US has been opaque about the data they are collecting and how is being stored we do know China is completely arbitrary and opaque. In the US there&amp;rsquo;s a separation of powers between institutions and a chance to actually clean up and learn about how the data is being used.</description></item><item><title>Styles Are Important</title><link>https://nrxr.org/post/styles-are-important/</link><pubDate>Thu, 08 Oct 2020 17:24:00 +0000</pubDate><guid>https://nrxr.org/post/styles-are-important/</guid><description>I&amp;rsquo;ve been reviewing a lot of code from candidates for the company I work at and have been discussing about art with some friends. I started to think a lot how I consider code-style very important and a form of art when done correctly.
Styling goes around organizing, writing correctly, naming correctly, documenting correctly.
Is my belief good style comes with time, comes with experience. You won&amp;rsquo;t know right ahead what works and what not.</description></item><item><title>Break the Cycle</title><link>https://nrxr.org/post/break-the-cycle/</link><pubDate>Thu, 30 Jul 2020 22:22:43 -0400</pubDate><guid>https://nrxr.org/post/break-the-cycle/</guid><description>I&amp;rsquo;m quite a workaholic and I know I have this bad habit. It tends to be bearable in normal circumstances but in the current pandemic situation is been so noticeable than in my dayjob I&amp;rsquo;ve been asked, repeatedly, to stop work.
I know, I&amp;rsquo;m lucky. My employer asks me to have healthy rutines. To keep a healthy personal life and stop my work, even though they are benefited in the short-term of my workaholicsm but they do understand the only outcome of this continuous habit is burnout and they want to avoid it.</description></item><item><title>Using POSIX sed for infile substitution</title><link>https://nrxr.org/post/using-posix-sed-infile-substitution/</link><pubDate>Sat, 05 Oct 2019 08:58:20 -0400</pubDate><guid>https://nrxr.org/post/using-posix-sed-infile-substitution/</guid><description>Something I learned when I started writing tools for developers in companies is that there&amp;rsquo;s GNU sed, BSD sed and that they are not compatible for something that I tend to write a lot: infile substitution.
I would find myself doing conditionals, finding out if it was running in a Darwin/BSD or if it was running on Linux. Then there was the bit where some people would install gnu-sed from Homebrew in their macs and add the gnubin path to their $PATH which then would break my conditionals because they would be using GNU sed in which I thought were BSD sed.</description></item><item><title>Copying Pointers in Go</title><link>https://nrxr.org/post/copying-pointers-in-go/</link><pubDate>Thu, 03 Oct 2019 21:20:40 -0400</pubDate><guid>https://nrxr.org/post/copying-pointers-in-go/</guid><description>Over a year ago I was trying to make a copy of a *url.URL and ended up with this quite nasty way to do so. I even applied this to maskpass, a small package that masks the password of an url.URL to make it log-friendly.
But today, looking for a nice clean way to do so in a PR being sent to Go I realized tmp := *src does the work nicely.</description></item><item><title>Using multi-stage Dockerfile for small Go docker images</title><link>https://nrxr.org/post/multi-stage-docker-for-go/</link><pubDate>Wed, 02 Oct 2019 18:39:10 -0400</pubDate><guid>https://nrxr.org/post/multi-stage-docker-for-go/</guid><description>This post will show you how to write a multi-stage Dockerfile and end up with a very small Docker image with just your application binary.
One of the very interesting things of using a compiled programming language like Go is that you end up with tiny binaries, which then you can distribute as such. If combined with Docker you can end up with very tiny images that are faster and cheaper to distribute.</description></item><item><title>Git Init</title><link>https://nrxr.org/post/git-init/</link><pubDate>Wed, 02 Oct 2019 18:16:14 -0400</pubDate><guid>https://nrxr.org/post/git-init/</guid><description>So, this is the initial post for this weblog. The mission is to share technical things I&amp;rsquo;ve learned doing stuff, right now the focus is Go, Docker and bash, but it&amp;rsquo;s not a hard limit on what will be written here.</description></item></channel></rss>