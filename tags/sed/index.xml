<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>sed on nrxr@journal:~$</title><link>https://nrxr.org/tags/sed/</link><description>Recent content in sed on nrxr@journal:~$</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 05 Oct 2019 08:58:20 -0400</lastBuildDate><atom:link href="https://nrxr.org/tags/sed/index.xml" rel="self" type="application/rss+xml"/><item><title>Using POSIX sed for infile substitution</title><link>https://nrxr.org/post/using-posix-sed-infile-substitution/</link><pubDate>Sat, 05 Oct 2019 08:58:20 -0400</pubDate><guid>https://nrxr.org/post/using-posix-sed-infile-substitution/</guid><description>Something I learned when I started writing tools for developers in companies is that there&amp;rsquo;s GNU sed, BSD sed and that they are not compatible for something that I tend to write a lot: infile substitution.
I would find myself doing conditionals, finding out if it was running in a Darwin/BSD or if it was running on Linux. Then there was the bit where some people would install gnu-sed from Homebrew in their macs and add the gnubin path to their $PATH which then would break my conditionals because they would be using GNU sed in which I thought were BSD sed.</description></item></channel></rss>